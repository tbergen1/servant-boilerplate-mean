angular.module("appDashboard",["ngResource","ui.router"]),angular.module("appDashboard").run(["$rootScope","$timeout","$interval",function(e){e.s={loading:!1,tinytext:null,tinytexts:[]}}]);var setupView=["$q","$rootScope","$stateParams","Application","ServantAngularService",function(e,n,t,r){if(n.s.user)return!0;var o=e.defer();return r.show_user(null,function(e){n.s.user=e,console.log("User fetched: ",n.s.user);var t={application_client_id:"none",token:n.s.user.servant_access_token_limited,protocol:window.location.host.indexOf("localhost")>-1?"http":"https",image_dropzone_class:"image-dropzone"};Servant.initialize(t),o.resolve()},function(e){return 401===e.status?(window.location="/",!1):void 0}),o.promise}];angular.module("appDashboard").config(["$stateProvider","$urlRouterProvider",function(e,n){n.otherwise("/"),e.state("dashboard",{url:"/",templateUrl:"views/dashboard/dashboard.html",resolve:{setupView:setupView}})}]),angular.module("appDashboard").config(["$locationProvider",function(e){e.hashPrefix("!")}]),angular.module("appDashboard").controller("DashboardController",["$rootScope","$scope","$timeout","$state","ServantAngularService",function(e,n,t,r,o){n.servant_index=0,e.view="servant",n.newPlan="plan1",n.plans=[{label:"500 Text Messages for $10/Month",plan_id:"plan1"},{label:"1000 Text Messages for $20/Month",plan_id:"plan2"},{label:"1500 Text Messages for $30/Month",plan_id:"plan3"},{label:"2000 Text Messages for $40/Month",plan_id:"plan4"},{label:"2500 Text Messages for $50/Month",plan_id:"plan5"}],n.subscribing,n.subscribed,n.initialize=function(){o.getUserAndServants().then(function(n){console.log("User and Servants Fetched:",n),e.s.servants=n.servants},function(e){console.log(e)})},n.wizardSetServant=function(t){for(i=0;i<e.s.servants.length;i++)e.s.servants[i]._id.toString()===t.toString()&&(n.servant_index=i);o.setServant(e.s.servants[n.servant_index]),e.view="none"===e.s.servants[n.servant_index].servant_pay_subscription_status?"createplan":"createnumber"},n.showServant=function(t){o.showServant(t).then(function(t){e.s.servants[n.servant_index]=t,console.log(t)},function(e){console.log(e)})},n.loadTinyTexts=function(){o.archetypesRecent("tinytext",1).then(function(n){e.s.tinytexts=n.records,console.log("Tiny Texts Fetched: ",e.s.tinytexts)},function(e){console.log(e)})},n.showModal=function(n){document.getElementById("modal-overlay").style.display="block",document.getElementById("modal-box").style.display="block",e.view=n},n.hideModal=function(){document.getElementById("modal-overlay").style.display="none",document.getElementById("modal-box").style.display="none",n.view="dashboard"},n.subscribe=function(){n.subscribing=!0,"active"===e.s.servants[n.servant_index].servant_pay_subscription_status?n.newPlan?o.servantpaySubscriptionUpdate(n.newPlan).then(function(r){return console.log(r),n.subscribing=!1,n.subscribed=!0,t(function(){n.subscribed=!1,e.view="menu"},3e3),n.showServant(e.s.servants[n.servant_index]._id)},function(e){console.log(e)}):o.servantpaySubscriptionCancel().then(function(r){return console.log(r),n.subscribing=!1,n.subscribed=!0,t(function(){n.subscribed=!1,e.view="menu"},3e3),n.showServant(e.s.servants[n.servant_index]._id)},function(e){console.log(e)}):o.servantpaySubscriptionCreate(n.newPlan).then(function(r){return console.log(r),n.subscribing=!1,n.subscribed=!0,t(function(){n.subscribed=!1,e.view="menu"},3e3),n.showServant(e.s.servants[n.servant_index]._id)},function(e){console.log(e)})}}]),angular.module("appDashboard").controller("NumberController",["$rootScope","$scope","$timeout","$modal","$state","ServantAngularService",function(e,n,t,r,o,a){n.view="loading",n.initialize=function(){},n.loadTinyTexts=function(){a.archetypesRecent("tinytext",1).then(function(n){e.s.tinytexts=n.records,console.log("Tiny Texts Fetched: ",e.s.tinytexts)},function(e){console.log(e)})},n.checkout=function(e){n.stripeCheckout.open({name:"Servant Text Messenger",description:"350 Text Messages/month for $"+e+".00",amount:e,panelLabel:"Subscribe {{ amount }}",amount:2e3})}}]),angular.module("appDashboard").controller("SubscriptionController",["$rootScope","$scope","$timeout","$modal","Application","ServantAngularService",function(e,n,t,r,o){if(window.location.host.indexOf("localhost")>-1)var a="pk_test_5mdgQevPdxbK1KrohjwhIHfs";else var a="pk_test_5mdgQevPdxbK1KrohjwhIHfs";n.view="loading",n.plans=[{label:"No Plan",subItem:{plan:"free"}},{label:"$10/month",subItem:{plan:"plan1"}},{label:"$20/month",subItem:{plan:"plan2"}},{label:"$30/month",subItem:{plan:"plan3"}},{label:"$40/month",subItem:{plan:"plan4"}}],n.newPlan,n.card={},n.initialize=function(){"free"===e.s.user.plan&&(n.newPlan=e.s.user.plan),Stripe.setPublishableKey(a)},n.updateCard=function(e){n.stripe_card={number:n.card.number,cvc:n.card.cvc},n.stripe_card["exp-year"]=n.card.expYear,n.stripe_card["exp-month"]=n.card.expMonth,Stripe.card.createToken(n.stripe_card,function(t,r){r.error?("number"===r.error.param&&(n.error="The Card number you entered is invalid"),"exp_month"===r.error.param&&(n.error="The Card expiration month you entered is invalid"),"exp_year"===r.error.param&&(n.error="The Card expiration year you entered is invalid"),"cvc"===r.error.param&&(n.error="The Card CVC you entered is invalid"),n.card.expYear=n.card["exp-year"],n.card.expMonth=n.card["exp-month"],n.$apply()):(n.error=!1,o.user_update_card({},r,function(t){return console.log("Card Saved: ",t),e?n.updatePlan():void 0},function(e){console.log(e)}))})},n.updatePlan=function(){o.user_update_plan({},{plan:n.newPlan},function(t){console.log("Plan Updated: ",t),e.s.user=t,n.success=!0},function(e){console.log(e)})}}]),angular.module("appDashboard").factory("Application",["$resource",function(e){return e("",null,{show_user:{method:"GET",isArray:!1,url:"/user"},user_update_card:{method:"POST",isArray:!1,url:"/user/update_card"},user_update_plan:{method:"PUT",isArray:!1,url:"/user/update_plan"}})}]),angular.module("appDashboard").service("ServantAngularService",["$rootScope","$q",function(e,n){this.status=function(){return Servant.status},this.connect=function(){Servant.connect()},this.getUserAndServants=function(){var e=n.defer();return Servant.getUserAndServants(function(n){e.resolve(n)},function(n){e.reject(n)}),e.promise},this.showServant=function(e){var t=n.defer();return Servant.showServant(e,function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},this.setServant=function(e){var t=n.defer();return Servant.setServant(e),t.resolve(),t.promise},this.initializeUploadableArchetypes=function(e){var t=n.defer();return Servant.initializeUploadableArchetypes(e),t.resolve(),t.promise},this.instantiate=function(e){var t=n.defer();return Servant.instantiate(e,function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},this.validate=function(e,t){var r=n.defer();return Servant.validate(e,t,function(e,n){e&&r.resolve(e),n&&r.resolve(n)},function(e){r.reject(e)}),r.promise},this.saveArchetype=function(e,t){var r=n.defer();return Servant.saveArchetype(e,t,function(e){r.resolve(e)},function(e){r.reject(e)}),r.promise},this.showArchetype=function(e,t){var r=n.defer();return Servant.showArchetype(e,t,function(e){r.resolve(e)},function(e){r.reject(e)}),r.promise},this.queryArchetypes=function(e,t){var r=n.defer();return Servant.queryArchetypes(e,t,function(e){r.resolve(e)},function(e){r.reject(e)}),r.promise},this.deleteArchetype=function(e,t){var r=n.defer();return Servant.deleteArchetype(e,t,function(e){r.resolve(e)},function(e){r.reject(e)}),r.promise},this.archetypesRecent=function(e,t){var r=n.defer();return Servant.archetypesRecent(e,t,function(e){r.resolve(e)},function(e){r.reject(e)}),r.promise},this.archetypesOldest=function(e,t){var r=n.defer();return Servant.archetypesOldest(e,t,function(e){r.resolve(e)},function(e){r.reject(e)}),r.promise},this.servantpayCharge=function(e){var t=n.defer();return Servant.servantpayCharge(e,function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},this.servantpaySubscriptionCreate=function(e){var t=n.defer();return Servant.servantpaySubscriptionCreate(e,function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},this.servantpaySubscriptionUpdate=function(e){var t=n.defer();return Servant.servantpaySubscriptionUpdate(e,function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},this.servantpaySubscriptionCancel=function(){var e=n.defer();return Servant.servantpaySubscriptionCancel(function(n){e.resolve(n)},function(n){e.reject(n)}),e.promise},this.servantpayCustomerDelete=function(){var e=n.defer();return Servant.servantpayCustomerDelete(function(n){e.resolve(n)},function(n){e.reject(n)}),e.promise}}]);