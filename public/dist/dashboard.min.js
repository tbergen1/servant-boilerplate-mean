angular.module("appDashboard",["ngResource","ui.router"]),angular.module("appDashboard").run(["$rootScope","$timeout","$interval","$state","ServantAngularService","Application",function(e,n,t,r){e.s={},e.$on("$stateChangeError",function(n,t,s,a,o,i){switch(e.s.loading=!1,i){case"no_subscription":return r.go("plan",s);case"no_number":return r.go("number",s);default:return r.go("servants")}})}]),angular.module("appDashboard").config(["$stateProvider","$urlRouterProvider",function(e,n){n.otherwise("/"),e.state("servants",{url:"/",templateUrl:"views/dashboard/servants.html",resolve:{setupView:setupView}}).state("plan",{url:"/:servantID/plan",templateUrl:"views/dashboard/plan.html",resolve:{setupView:setupView}}).state("number",{url:"/:servantID/number",templateUrl:"views/dashboard/number.html",resolve:{setupView:setupView}}).state("menu",{url:"/:servantID/menu",templateUrl:"views/dashboard/menu.html",resolve:{setupView:setupView}}).state("blast",{url:"/:servantID/blast",templateUrl:"views/dashboard/blast.html",resolve:{setupView:setupView}})}]);var setupView=["$q","$rootScope","$state","$stateParams","Application","ServantAngularService",function(e,n,t,r,s,a){var o=this,u=function(e){var t={application_client_id:"none",token:n.s.user.servant_access_token_limited,protocol:window.location.host.indexOf("localhost")>-1?"http":"https",image_dropzone_class:"image-dropzone"};Servant.initialize(t,function(){return e()})},l=function(e){s.show_user(null,function(t){return n.s.user=t,console.log("User And Servants Fetched: ",n.s.user),e(null,n.s.user)},function(n){return 401===n.status?(window.location="/",!1):e(n,null)})},c=function(e){a.getUserAndServants().then(function(t){for(i=0;i<n.s.user.servants.length;i++)for(j=0;j<t.servants.length;j++)n.s.user.servants[i].servant_id===t.servants[j]._id&&(n.s.user.servants[i].master=t.servants[j].master,n.s.user.servants[i].master_biography=t.servants[j].master_biography,n.s.user.servants[i].personality=t.servants[j].personality,n.s.user.servants[i].servant_pay_subscription_status=t.servants[j].servant_pay_subscription_status,n.s.user.servants[i].servant_pay_subscription_plan_canceled=t.servants[j].servant_pay_subscription_plan_canceled,n.s.user.servants[i].servant_pay_subscription_plan_id=t.servants[j].servant_pay_subscription_plan_id);return e?e():void 0},function(e){console.log(e)})},d=function(e,t){for(i=0;i<n.s.user.servants.length;i++)n.s.user.servants[i].servant_id.toString()===e&&(n.servant_index=i);return a.setServant(n.s.user.servants[n.servant_index].servant_id),t()},p=function(e){return e("none"===n.s.user.servants[n.servant_index].servant_pay_subscription_status?"no_subscription":n.s.user.servants[n.servant_index].twilio_phone_number?null:"no_number")};if(n.s.user){if(r.servantID&&["menu","blast"].indexOf(o.self.name)>-1){var v=e.defer();return n.s.loading=!0,d(r.servantID,function(){p(function(e){return e?v.reject(e):(n.s.loading=!1,v.resolve())})}),v.promise}return!0}var v=e.defer();return n.s.loading=!0,l(function(){u(function(){c(function(){return r.servantID?void d(r.servantID,function(){p(function(e){return e?v.reject(e):(n.s.loading=!1,v.resolve())})}):(n.s.loading=!1,v.resolve())})})}),v.promise}];angular.module("appDashboard").config(["$locationProvider",function(e){e.hashPrefix("!")}]),angular.module("appDashboard").controller("BlastController",["$rootScope","$scope","$timeout","$interval","$state","Application","ServantAngularService",function(e,n,t,r,s,a,o){n.initialize=function(){n.view="tinytext",n.tinytexts=[],n.tinytext,n.more_results=!0,n.page=1,n.blast_date=moment(),n.blast_date.diff(moment(),"minutes")&&(n.blast_date=moment()),r(function(){n.blast_date.diff(moment(),"minutes")&&(n.blast_date=moment())},6e4),n.loadTinyTexts(),$("#tiny-text-container").scroll(function(){var e=$("#tiny-text-container")[0].scrollHeight-($("#tiny-text-container").scrollTop()+$("#tiny-text-container").height());$("#tiny-text-container").scrollTop()>100&&100>e&&n.more_results&&!n.loading_infinitescroll&&(n.loading_infinitescroll=!0,n.page=n.page+1,n.loadTinyTexts(n.page,function(){t(function(){n.loading_infinitescroll=!1},250)}))})},n.selectTinyText=function(e){n.view="schedule",n.tinytext=e},n.scheduleTask=function(){n.scheduling=!0,a.scheduleTask({servantID:e.s.user.servants[e.servant_index].servant_id},{scheduled_time:n.blast_date.toDate(),tinytextID:n.tinytext._id,task:"sms_blast_single"},function(e){n.scheduled_time=moment(e.scheduled_time),n.view="scheduled",n.scheduling=!1},function(e){console.log(e)})},n.loadTinyTexts=function(e,t){o.archetypesRecent("tinytext",e).then(function(e){return n.tinytexts=n.tinytexts.concat(e.records),console.log("Tiny Texts Fetched: ",n.tinytexts),e.records.length<10&&(n.more_results=!1),t?t():void 0},function(e){return console.log(e),t?t():void 0})},n.adjustDate=function(e,t){"up"===t&&n.blast_date.add(1,e),"down"===t&&n.blast_date.subtract(1,e),n.blast_date.diff(moment(),"minutes")<0&&(n.blast_date=moment()),n.blast_date.diff(moment(),"days")>61&&(n.blast_date=moment().add(60,"days"))}}]),angular.module("appDashboard").controller("DashboardController",["$rootScope","$scope","$timeout","$state","Application","ServantAngularService",function(e,n,t,r,s,a){n.newPlan="plan1",n.number_type="local",n.plans=[{label:"500 Text Messages for $10/Month",plan_id:"plan1"},{label:"1000 Text Messages for $20/Month",plan_id:"plan2"},{label:"1500 Text Messages for $30/Month",plan_id:"plan3"},{label:"2000 Text Messages for $40/Month",plan_id:"plan4"},{label:"2500 Text Messages for $50/Month",plan_id:"plan5"}],n.country="US",n.area_code="424",n.initialize=function(){n.getServants()},n.getServants=function(n){a.getUserAndServants().then(function(t){for(e.s.servants=t.servants,i=0;i<e.s.user.servants.length;i++)for(j=0;j<e.s.servants.length;j++)e.s.user.servants[i].servant_id===e.s.servants[j]._id&&(e.s.user.servants[i].master=e.s.servants[j].master,e.s.user.servants[i].master_biography=e.s.servants[j].master_biography,e.s.user.servants[i].personality=e.s.servants[j].personality,e.s.user.servants[i].servant_pay_subscription_status=e.s.servants[j].servant_pay_subscription_status,e.s.user.servants[i].servant_pay_subscription_plan_canceled=e.s.servants[j].servant_pay_subscription_plan_canceled);return n?n():void 0},function(e){console.log(e)})},n.showServant=function(e){a.showServant(e).then(function(e){console.log(e)},function(e){console.log(e)})},n.searchPhoneNumbers=function(){n.searching=!0,s.searchPhoneNumbers({servantID:e.s.servants[e.servant_index]._id},{number_type:n.number_type,country:n.country,area_code:n.area_code},function(e){n.phone_numbers=e.available_phone_numbers,n.searching=!1},function(e){console.log(e),n.phone_numbers=[],n.searching=!1})},n.purchasePhoneNumber=function(r){var a=confirm("Is this the number you want: "+r+"?  this number will be yours as long as you have a plan with us.");a&&(n.registering=!0,s.purchasePhoneNumber({servantID:e.s.servants[e.servant_index]._id},{phone_number:r},function(r){e.s.user.servants[e.servant_index].twilio_phone_number=r.twilio_phone_number,n.registering=!1,n.registered=!0,t(function(){e.view="menu",n.registering=!1,n.registered=!1},4e3)},function(e){console.log(e)}))},n.scheduleTask=function(t){s.scheduleTask({servantID:e.s.servants[e.servant_index]._id},{time:t},function(t){n.registering=!1,e.s.servants[e.servant_index]=t},function(e){console.log(e)})},n.loadTinyTexts=function(){a.archetypesRecent("tinytext",1).then(function(n){e.s.tinytexts=n.records,console.log("Tiny Texts Fetched: ",e.s.tinytexts)},function(e){console.log(e)})},n.subscribe=function(){n.subscribing=!0,"active"===e.s.servants[e.servant_index].servant_pay_subscription_status?n.newPlan?a.servantpaySubscriptionUpdate(n.newPlan).then(function(r){return console.log(r),n.subscribing=!1,n.subscribed=!0,t(function(){n.subscribed=!1,e.view="menu"},3e3),n.showServant(e.s.servants[e.servant_index]._id)},function(e){console.log(e)}):a.servantpaySubscriptionCancel().then(function(r){return console.log(r),n.subscribing=!1,n.subscribed=!0,t(function(){n.subscribed=!1,e.view="menu"},3e3),n.showServant(e.s.servants[e.servant_index]._id)},function(e){console.log(e)}):a.servantpaySubscriptionCreate(n.newPlan).then(function(r){return console.log(r),n.subscribing=!1,n.subscribed=!0,t(function(){n.subscribed=!1,e.view="menu"},3e3),n.showServant(e.s.servants[e.servant_index]._id)},function(e){console.log(e)})},n.adjustDate=function(e,t){var r=moment(new Date);console.log(e,t),"up"===t&&n.blast_date.add(1,e),"down"===t&&n.blast_date.subtract(1,e),n.blast_date.diff(r,"hours")<1&&(n.blast_date=moment(new Date),n.blast_date.add(1,"hours").startOf("hour")),n.blast_date.diff(r,"days")>30&&n.blast_date.subtract(1,"days")},n.showModal=function(n){document.getElementById("modal-overlay").style.display="block",document.getElementById("modal-box").style.display="block",e.view=n},n.hideModal=function(){document.getElementById("modal-overlay").style.display="none",document.getElementById("modal-box").style.display="none",e.view="dashboard"}}]),angular.module("appDashboard").controller("NumberController",["$rootScope","$scope","$timeout","$modal","$state","ServantAngularService",function(e,n,t,r,s,a){n.view="loading",n.initialize=function(){},n.loadTinyTexts=function(){a.archetypesRecent("tinytext",1).then(function(n){e.s.tinytexts=n.records,console.log("Tiny Texts Fetched: ",e.s.tinytexts)},function(e){console.log(e)})},n.checkout=function(e){n.stripeCheckout.open({name:"Servant Text Messenger",description:"350 Text Messages/month for $"+e+".00",amount:e,panelLabel:"Subscribe {{ amount }}",amount:2e3})}}]),angular.module("appDashboard").controller("SubscriptionController",["$rootScope","$scope","$timeout","$modal","Application","ServantAngularService",function(e,n,t,r,s){if(window.location.host.indexOf("localhost")>-1)var a="pk_test_5mdgQevPdxbK1KrohjwhIHfs";else var a="pk_test_5mdgQevPdxbK1KrohjwhIHfs";n.view="loading",n.plans=[{label:"No Plan",subItem:{plan:"free"}},{label:"$10/month",subItem:{plan:"plan1"}},{label:"$20/month",subItem:{plan:"plan2"}},{label:"$30/month",subItem:{plan:"plan3"}},{label:"$40/month",subItem:{plan:"plan4"}}],n.newPlan,n.card={},n.initialize=function(){"free"===e.s.user.plan&&(n.newPlan=e.s.user.plan),Stripe.setPublishableKey(a)},n.updateCard=function(e){n.stripe_card={number:n.card.number,cvc:n.card.cvc},n.stripe_card["exp-year"]=n.card.expYear,n.stripe_card["exp-month"]=n.card.expMonth,Stripe.card.createToken(n.stripe_card,function(t,r){r.error?("number"===r.error.param&&(n.error="The Card number you entered is invalid"),"exp_month"===r.error.param&&(n.error="The Card expiration month you entered is invalid"),"exp_year"===r.error.param&&(n.error="The Card expiration year you entered is invalid"),"cvc"===r.error.param&&(n.error="The Card CVC you entered is invalid"),n.card.expYear=n.card["exp-year"],n.card.expMonth=n.card["exp-month"],n.$apply()):(n.error=!1,s.user_update_card({},r,function(t){return console.log("Card Saved: ",t),e?n.updatePlan():void 0},function(e){console.log(e)}))})},n.updatePlan=function(){s.user_update_plan({},{plan:n.newPlan},function(t){console.log("Plan Updated: ",t),e.s.user=t,n.success=!0},function(e){console.log(e)})}}]),angular.module("appDashboard").factory("Application",["$resource",function(e){return e("",null,{show_user:{method:"GET",isArray:!1,url:"/user"},searchPhoneNumbers:{method:"POST",isArray:!1,url:"/servants/:servantID/twilio/phone_numbers/search"},purchasePhoneNumber:{method:"POST",isArray:!1,url:"/servants/:servantID/twilio/phone_numbers/purchase"},scheduleTask:{method:"POST",isArray:!1,url:"/servants/:servantID/schedule/task"}})}]),angular.module("appDashboard").service("ServantAngularService",["$rootScope","$q",function(e,n){this.status=function(){return Servant.status},this.connect=function(){Servant.connect()},this.getUserAndServants=function(){var e=n.defer();return Servant.getUserAndServants(function(n){e.resolve(n)},function(n){e.reject(n)}),e.promise},this.showServant=function(e){var t=n.defer();return Servant.showServant(e,function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},this.setServant=function(e){var t=n.defer();return Servant.setServant(e),t.resolve(),t.promise},this.initializeUploadableArchetypes=function(e){var t=n.defer();return Servant.initializeUploadableArchetypes(e),t.resolve(),t.promise},this.instantiate=function(e){var t=n.defer();return Servant.instantiate(e,function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},this.validate=function(e,t){var r=n.defer();return Servant.validate(e,t,function(e,n){e&&r.resolve(e),n&&r.resolve(n)},function(e){r.reject(e)}),r.promise},this.saveArchetype=function(e,t){var r=n.defer();return Servant.saveArchetype(e,t,function(e){r.resolve(e)},function(e){r.reject(e)}),r.promise},this.showArchetype=function(e,t){var r=n.defer();return Servant.showArchetype(e,t,function(e){r.resolve(e)},function(e){r.reject(e)}),r.promise},this.queryArchetypes=function(e,t){var r=n.defer();return Servant.queryArchetypes(e,t,function(e){r.resolve(e)},function(e){r.reject(e)}),r.promise},this.deleteArchetype=function(e,t){var r=n.defer();return Servant.deleteArchetype(e,t,function(e){r.resolve(e)},function(e){r.reject(e)}),r.promise},this.archetypesRecent=function(e,t){var r=n.defer();return Servant.archetypesRecent(e,t,function(e){r.resolve(e)},function(e){r.reject(e)}),r.promise},this.archetypesOldest=function(e,t){var r=n.defer();return Servant.archetypesOldest(e,t,function(e){r.resolve(e)},function(e){r.reject(e)}),r.promise},this.servantpayCharge=function(e){var t=n.defer();return Servant.servantpayCharge(e,function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},this.servantpaySubscriptionCreate=function(e){var t=n.defer();return Servant.servantpaySubscriptionCreate(e,function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},this.servantpaySubscriptionUpdate=function(e){var t=n.defer();return Servant.servantpaySubscriptionUpdate(e,function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},this.servantpaySubscriptionCancel=function(){var e=n.defer();return Servant.servantpaySubscriptionCancel(function(n){e.resolve(n)},function(n){e.reject(n)}),e.promise},this.servantpayCustomerDelete=function(){var e=n.defer();return Servant.servantpayCustomerDelete(function(n){e.resolve(n)},function(n){e.reject(n)}),e.promise}}]);